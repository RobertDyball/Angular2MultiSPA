
@using Angular2MultiSPA.ViewModels
@using Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
@using System.Collections.Generic
@using System.Reflection
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper "*,Angular2MultiSPA"
@model SampleData

<div class="row">

    <p class="small">
        NOTE: Code below for illustration only. The left and right parentheses are active characters, used within angular 2. In code blocks below they have been represented as &quot;(&quot; and &quot;)&quot; instead of &quot;{{ '{' }}&quot; or &quot;{{ '}' }}&quot; to avoid being mishandled by Razor on the server or Angular on the client.<br />
        Until the multiple levels of delimiting needed,are added, please copy any code directly from the source on <a href="https://github.com/RobertDyball/Angular2MultiSPA" target="_blank">GitHub here</a> instead.<br />
    </p>

    <!-- http://codepen.io/jek/pen/BoWNRy?css-preprocessor=sass  -->
    <ul class="nav nav-tabs" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" href="#tagin" role="tab" data-toggle="tab">Data Entry Tag Helpers</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#tagda" role="tab" data-toggle="tab">Data Input Tag Helpers</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#references" role="tab" data-toggle="tab">Supported data types</a>
        </li>
    </ul>

    <!-- Tab panes -->
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane fade in active" id="tagin">
            <div class="card">
                <div class="card-block">
                    <div class="col-md-2"><h4 class="card-title">Server</h4></div>
                    <div class="col-md-10">
                        <p class="small">(1) Define data model + Web API data services on server (not shown here), create a CSHTML page (instead of hard-coded HTML template) add markup using tag helpers + intellisense.</p>
                    </div>
                </div>
                <div class="card-block">
                    <div class="col-md-5">
                        <h6 class="card-subtitle text-muted">excerpt from C# data model, using optional data attributes</h6>
                        <code>
                            <pre>
                            @{
                                Write(@"
        [DataType(DataType.Time)]
        public DateTime TimeVar ( get; set; )
        public DateTime string ( get; set; )
        [DataType(DataType.Currency)]
        public decimal Currency ( get; set; )
        public string Text ( get; set; )
        [DataType(DataType.EmailAddress)]
        public string EmailAddress ( get; set; )
");
                            }
                        </pre>
                        </code>
                    </div>

                    <div class="col-md-1">
                        <i style="font-size:x-large" class="icon ion-md-arrow-forward fadeIn"></i>
                    </div>

                    <div class="col-md-6">
                        <h6 class="card-subtitle text-muted">CSHTML markup using tag helpers</h6>
                        <code>
                            <pre>
                        @{
                            // NOTE: delimitered code here for literal display; 
                            // the following code is not executed here, actual code is further below.
                            Write(@"
        <div *ngIf=""sampleData != null"">
            <tag-da bind-pa=""sampleData"" for=""DateTimeVar""></tag-da >
            <tag-da bind-pa=""sampleData"" for=""Currency""></tag-da>
            <tag-da bind-pa=""sampleData"" for=""Text""></tag-da>
            <tag-da bind-pa=""sampleData"" for=""EmailAddress""></tag-da>
        </div>
");
                        }
                    </pre>
                        </code>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-block">
                    <div class="col-md-2"><h4 class="card-title">Angular 2</h4></div>
                    <div class="col-md-6">
                        <p class="small">(2) Create angular data model, data services (manually or using NSwag) create angular component</p>
                    </div>
                    <div class="col-md-4"><i style="font-size:x-large" class="icon ion-md-arrow-down fadeIn"></i></div>
                </div>
                <div class="card-block">
                    <div class="col-md-5">
                        <h6 class="card-subtitle text-muted">typical angular service</h6>
                        <code>
                            <pre>
                            @{
                                Write(@"
    import ( Injectable ) from '@angular/core';
    import ( Http, Response, RequestOptions ) from '@angular/http';
    import ( Observable ) from 'rxjs/Rx';
    import 'rxjs/add/operator/map';
    import 'rxjs/add/operator/catch';
    import ( AuthService ) from './auth.service';
    import ( SampleData ) from '../models/sampleData.ts';
    @Injectable()
    export class SampleDataService (
        constructor(private http: Http, private authService: AuthService) ( )
        getSampleData(): Observable<SampleData> (
            return this.http.get('api/sampleData', ( headers: this.authService.jsonHeaders() ))
                .map((resp: Response) => resp.json())
                .catch(this.handleError);
        )
        handleError(error: any) (
            console.error(error);
            return Observable.throw(error.json().error || 'Server error');
        )
    )
");
                            }
                        </pre>
                        </code>

                        <h6 class="card-subtitle text-muted">excerpt from angular data model</h6>
                        <code>
                            <pre>
                                @{
                                    Write(@"
    import ( Component ) from '@angular/core';
    export class SampleData (
        dateTimeVar: Date;
        currency: number;
        text: string;
        emailAddress: string;
    )
");
                                }
                            </pre>
                        </code>
                    </div>

                    <div class="col-md-1">
                        <i style="font-size:x-large" class="icon ion-md-arrow-forward fadeIn"></i>
                    </div>

                    <div class="col-md-6">
                        <h6 class="card-subtitle text-muted">Angular component; note use of C# partial view in plce of HTML template or template URL</h6>
                        <code>
                            <pre>
                                @{
                                    // NOTE: delimitered code here for literal display; 
                                    // the following code is not executed here, actual code is further below.
                                    Write(@"
    import ( Component, OnInit ) from '@angular/core';
    import ( DomSanitizer) from '@angular/platform-browser';
    import ( SampleDataService ) from './services/SampleData.service';
    import ( SampleData ) from './models/SampleData.ts';
    @Component((
        selector: 'my-content',
        templateUrl: '/partial/documentationComponent'
    ))
    export class DocumentationComponent implements OnInit (
        sampleData: SampleData = null;
        constructor(
            private _DomSanitizer: DomSanitizer,
            private sampleDataService: SampleDataService
        ) ( )
        ngOnInit() (
            this.sampleDataService.getSampleData()
                .subscribe((data: SampleData) => this.sampleData = data);
        )
    )
");
                                }
                            </pre>
                        </code>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-block">
                    <div class="col-md-7"><h4 class="card-title">Browser</h4></div>
                    <div class="col-md-5"><i style="font-size:x-large" class="icon ion-md-arrow-down fadeIn"></i></div>
                </div>
                <div class="card-block">
                    <div class="col-md-5">
                        <h6 class="card-subtitle text-muted">Actual output, as seen in browser</h6>
                        <br />
                        <div *ngIf="sampleData != null">
                            <tag-da bind-pa="sampleData" for="DateTimeVar"></tag-da>
                            <tag-da bind-pa="sampleData" for="Text"></tag-da>
                        </div>
                    </div>

                    <div class="col-md-1">
                        <i style="font-size:x-large" class="icon ion-md-arrow-back fadeIn"></i>
                    </div>

                    <div class="col-md-6">
                        <h6 class="card-subtitle text-muted">HTML generated from above, sent from server to browser</h6>
                        <code>
                            <pre>
                                @{
                                    Write(@"
    <div *ngIf=""sampleData != null"">
        <div><span>((sampleData.dateTimeVar | date:'dd/MM/yyyy hh:mm:ss'))</span></div>
        <div><span>((sampleData.text))</span></div>
    </div>");
                                }
                            </pre>
                        </code>
                    </div>
                </div>
            </div>
        </div>

        <div role="tabpanel" class="tab-pane fade" id="tagda">

            <div class="card">
                <div class="card-block">
                    <div class="col-md-2"><h4 class="card-title">Server</h4></div>
                    <div class="col-md-10">
                        <p class="small">(1) Define data model + Web API data services on server (not shown here), create a CSHTML page (instead of hard-coded HTML template) add markup using tag helpers + intellisense.</p>
                    </div>
                </div>
                <div class="card-block">
                    <div class="col-md-5">
                        <h6 class="card-subtitle text-muted">excerpt from C# data model, using optional data attributes</h6>
                        <code>
                            <pre>
                                @{
                                    Write(@"
    [DataType(DataType.Currency)]
    public decimal Currency ( get; set; )
    [Required]
    [StringLength(100, ErrorMessage = ""The (0) must be at least (2) characters long."",
                       MinimumLength = 6)]
    [DataType(DataType.Password)]
    [Display(Name = ""Password"")]
    public string Password ( get; set; )");
                                }
                            </pre>
                        </code>
                    </div>

                    <div class="col-md-1">
                        <i style="font-size:x-large" class="icon ion-md-arrow-forward fadeIn"></i>
                    </div>

                    <div class="col-md-6">
                        <h6 class="card-subtitle text-muted">CSHTML markup using tag helpers</h6>
                        <code>
                            <pre>
                                @{
                                    // NOTE: delimitered code here for literal display; 
                                    // the following code is not executed here, actual code is further below.
                                    Write(@"
    <div *ngIf=""sampleData != null"">
        <tag-in bind-pa=""sampleData"" for=""Currency""></tag-da >
        <tag-in bind-pa=""sampleData"" for=""Password""></tag-da>
    </div>");
                                    }
                            </pre>
                        </code>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-block">
                    <div class="col-md-2"><h4 class="card-title">Angular 2</h4></div>
                    <div class="col-md-6">
                        <p class="small">(2) Create angular data model, data services (manually or using NSwag) create angular component</p>
                    </div>
                    <div class="col-md-4"><i style="font-size:x-large" class="icon ion-md-arrow-down fadeIn"></i></div>
                </div>
                <div class="card-block">
                    <div class="col-md-5">
                        <h6 class="card-subtitle text-muted">typical angular service</h6>
                        <code>
                            <pre>
                            @{
                                Write(@"
    import ( Injectable ) from '@angular/core';
    import ( Http, Response, RequestOptions ) from '@angular/http';
    import ( Observable ) from 'rxjs/Rx';
    import 'rxjs/add/operator/map';
    import 'rxjs/add/operator/catch';
    import ( AuthService ) from './auth.service';
    import ( SampleData ) from '../models/sampleData.ts';
    @Injectable()
    export class SampleDataService (
        constructor(private http: Http, private authService: AuthService) ( )
        getSampleData(): Observable<SampleData> (
            return this.http.get('api/sampleData', ( headers: this.authService.jsonHeaders() ))
                .map((resp: Response) => resp.json())
                .catch(this.handleError);
        )
        handleError(error: any) (
            console.error(error);
            return Observable.throw(error.json().error || 'Server error');
        )
    )
");
                            }
                        </pre>
                        </code>

                        <h6 class="card-subtitle text-muted">excerpt from angular data model</h6>
                        <code>
                            <pre>
                                @{
                                    Write(@"
    import ( Component ) from '@angular/core';
    export class SampleData (
        dateTimeVar: Date;
        currency: number;
        text: string;
        emailAddress: string;
    )
");
                                }
                            </pre>
                        </code>
                    </div>

                    <div class="col-md-1">
                        <i style="font-size:x-large" class="icon ion-md-arrow-forward fadeIn"></i>
                    </div>

                    <div class="col-md-6">
                        <h6 class="card-subtitle text-muted">Angular component; note use of C# partial view in plce of HTML template or template URL</h6>
                        <code>
                            <pre>
                                @{
                                    // NOTE: delimitered code here for literal display; 
                                    // the following code is not executed here, actual code is further below.
                                    Write(@"
    import ( Component, OnInit ) from '@angular/core';
    import ( DomSanitizer) from '@angular/platform-browser';
    import ( SampleDataService ) from './services/SampleData.service';
    import ( SampleData ) from './models/SampleData.ts';
    @Component((
        selector: 'my-content',
        templateUrl: '/partial/documentationComponent'
    ))
    export class DocumentationComponent implements OnInit (
        sampleData: SampleData = null;
        constructor(
            private _DomSanitizer: DomSanitizer,
            private sampleDataService: SampleDataService
        ) ( )
        ngOnInit() (
            this.sampleDataService.getSampleData()
                .subscribe((data: SampleData) => this.sampleData = data);
        )
    )
");
                                }
                            </pre>
                        </code>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-block">
                    <div class="col-md-7"><h4 class="card-title">Browser</h4></div>
                    <div class="col-md-5"><i style="font-size:x-large" class="icon ion-md-arrow-down fadeIn"></i></div>
                </div>
                <div class="card-block">
                    <div class="col-md-5">
                        <h6 class="card-subtitle text-muted">Actual output, as seen in browser</h6>
                        <br />
                        <div *ngIf="sampleData != null">
                            <tag-in bind-pa="sampleData" for="Currency"></tag-in>
                            <tag-in bind-pa="sampleData" for="Password"></tag-in>
                        </div>
                    </div>

                    <div class="col-md-1">
                        <i style="font-size:x-large" class="icon ion-md-arrow-back fadeIn"></i>
                    </div>

                    <div class="col-md-6">
                        <h6 class="card-subtitle text-muted">HTML generated from above, sent from server to browser</h6>
                        <code>
                            <pre>
                                @{
                                    // NOTE: delimitered code here for literal display; 
                                    // the following code is not executed here, actual code is further below.
                                    Write(@"
    <div *ngIf=""sampleData != null"">
        <div class=""form-group"">
            <div class=""input-group"">
                <span class=""input-group-addon"">$</span>
                <input #sampleData.currency class=""form-control"" id=""sampleData.currency"" 
                            placeholder=""Currency"" required=""required"" type=""Currency"">
            </div>
        </div>
        <div class=""form-group"">
                <input #sampleData.password class=""form-control"" id=""sampleData.password"" 
                    maxLength=""100"" minLength=""6"" placeholder=""Password"" required=""required"" type=""Password"">
        </div>
    </div>");
                                }
                            </pre>
                        </code>
                    </div>
                </div>
            </div>
        </div>

        <div role="tabpanel" class="tab-pane fade" id="references">
            <br />

            <br />
            <div *ngIf="sampleData != null">
                <table style="width:90%" class="table-sm">
                    <tr>
                        <th>Data Type</th>
                        <th>DataType Attribute</th>
                        <th>Data Display</th>
                        <th>Done?</th>
                        <th>i18n?</th>
                        <th>Comments</th>
                        <th>Data Input</th>
                        <th>Done?</th>
                        <th>i18n?</th>
                        <th>Comments</th>
                    </tr>
                    <tr>
                        <td>DateTime</td>
                        <td>DataType(DataType.DateTime)</td>
                        <td><tag-da bind-pa="sampleData" for="DateTimeVar"></tag-da></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                        <td><tag-in bind-pa="sampleData" for="DateTimeVar"></tag-in></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>Date</td>
                        <td>DataType(DataType.Date)</td>
                        <td><tag-da bind-pa="sampleData" for="DateVar"></tag-da></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                        <td><tag-in bind-pa="sampleData" for="DateVar"></tag-in></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>Time</td>
                        <td>DataType(DataType.Time)</td>
                        <td><tag-da bind-pa="sampleData" for="TimeVar"></tag-da></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                        <td><tag-in bind-pa="sampleData" for="TimeVar"></tag-in></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>Duration</td>
                        <td>DataType(DataType.Duration)</td>
                        <td><tag-da bind-pa="sampleData" for="Duration"></tag-da></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                        <td><tag-in bind-pa="sampleData" for="Duration"></tag-in></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>PhoneNumber</td>
                        <td>DataType(DataType.PhoneNumber)</td>
                        <td><tag-da bind-pa="sampleData" for="PhoneNumber"></tag-da></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                        <td><tag-in bind-pa="sampleData" for="PhoneNumber"></tag-in></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>Currency</td>
                        <td>DataType(DataType.Currency)</td>
                        <td><tag-da bind-pa="sampleData" for="Currency"></tag-da></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                        <td><tag-in bind-pa="sampleData" for="Currency"></tag-in></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>Text</td>
                        <td>DataType(DataType.Text)</td>
                        <td><tag-da bind-pa="sampleData" for="Text"></tag-da></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                        <td><tag-in bind-pa="sampleData" for="Text"></tag-in></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>Html</td>
                        <td>DataType(DataType.Html)</td>
                        <td><tag-da bind-pa="sampleData" for="Html"></tag-da></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                        <td><tag-in bind-pa="sampleData" for="Html"></tag-in></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>MultilineText</td>
                        <td>DataType(DataType.MultilineText)</td>
                        <td><tag-da bind-pa="sampleData" for="MultilineText"></tag-da></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                        <td><tag-in bind-pa="sampleData" for="MultilineText"></tag-in></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>EmailAddress</td>
                        <td>DataType(DataType.EmailAddress)</td>
                        <td>@*<tag-da bind-pa="sampleData" for="EmailAddress"></tag-da>*@</td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                        <td>@*<tag-in bind-pa="sampleData" for="EmailAddress"></tag-in>*@</td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>Password</td>
                        <td>DataType(DataType.Password)</td>
                        <td><tag-da bind-pa="sampleData" for="Password"></tag-da></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                        <td><tag-in bind-pa="sampleData" for="Password"></tag-in></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>Url</td>
                        <td>DataType(DataType.Url)</td>
                        <td>@*<tag-da bind-pa="sampleData" for="Url"></tag-da>*@</td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                        <td>@*<tag-in bind-pa="sampleData" for="Url"></tag-in>*@</td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>ImageUrl</td>
                        <td>DataType(DataType.ImageUrl)</td>
                        <td>@*<tag-da bind-pa="sampleData" for="ImageUrl"></tag-da>*@</td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                        <td>@*<tag-in bind-pa="sampleData" for="ImageUrl"></tag-in>*@</td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>CreditCard</td>
                        <td>DataType(DataType.CreditCard)</td>
                        <td><tag-da bind-pa="sampleData" for="CreditCard"></tag-da></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                        <td><tag-in bind-pa="sampleData" for="CreditCard"></tag-in></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>PostalCode</td>
                        <td>DataType(DataType.PostalCode)</td>
                        <td><tag-da bind-pa="sampleData" for="PostalCode"></tag-da></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                        <td><tag-in bind-pa="sampleData" for="PostalCode"></tag-in></td>
                        <td>N</td>
                        <td>N</td>
                        <td></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>
